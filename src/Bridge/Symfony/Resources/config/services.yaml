parameters:
    # Environment variables with default option values. All those environment
    # variables will be used per default, if defined, but will be ignored when
    # you override the related parameter in the "config/packages/db_tools.yaml"
    # file.
    env(DBTOOLS_BACKUP_BINARY_MARIADB): ~
    env(DBTOOLS_BACKUP_BINARY_MYSQL): ~
    env(DBTOOLS_BACKUP_BINARY_POSTGRESQL): ~
    env(DBTOOLS_BACKUP_BINARY_SQLITE): ~
    env(DBTOOLS_BACKUP_EXPIRATION_AGE): '3 months ago'
    #env(DBTOOLS_BACKUP_OPTIONS): ~
    env(DBTOOLS_BACKUP_TIMEOUT): '600'
    env(DBTOOLS_RESTORE_BINARY_MARIADB): ~
    env(DBTOOLS_RESTORE_BINARY_MYSQL): ~
    env(DBTOOLS_RESTORE_BINARY_POSTGRESQL): ~
    env(DBTOOLS_RESTORE_BINARY_SQLITE): ~
    #env(DBTOOLS_RESTORE_OPTIONS): ~
    env(DBTOOLS_RESTORE_TIMEOUT): '1800'
    env(DBTOOLS_STORAGE_FILENAME_STRATEGY): datetime
    env(DBTOOLS_STORAGE_ROOT_DIR): "%kernel.project_dir%/var/db_tools"

    # Container parameters that maps per default on the environment variables
    # and will be injected to services. Those parameter values will be overriden
    # by user given values from the "config/packages/db_tools.yaml" file in the
    # MakinaCorpus\DbToolsBundle\Bridge\Symfony\DependencyInjection\DbToolsExtension
    # class.
    db_tools.backup_binaries.mariadb: "%env(resolve:DBTOOLS_BACKUP_BINARY_MARIADB)%"
    db_tools.backup_binaries.mysql: "%env(resolve:DBTOOLS_BACKUP_BINARY_MYSQL)%"
    db_tools.backup_binaries.postgresql: "%env(resolve:DBTOOLS_BACKUP_BINARY_POSTGRESQL)%"
    db_tools.backup_binaries.sqlite: "%env(resolve:DBTOOLS_BACKUP_BINARY_SQLITE)%"
    db_tools.backup_expiration_age: "%env(DBTOOLS_BACKUP_EXPIRATION_AGE)%"
    db_tools.backup_options: []
    db_tools.backup_timeout: "%env(int:DBTOOLS_BACKUP_TIMEOUT)%"
    db_tools.restore_binaries.mariadb: "%env(resolve:DBTOOLS_RESTORE_BINARY_MARIADB)%"
    db_tools.restore_binaries.mysql: "%env(resolve:DBTOOLS_RESTORE_BINARY_MYSQL)%"
    db_tools.restore_binaries.postgresql: "%env(resolve:DBTOOLS_RESTORE_BINARY_POSTGRESQL)%"
    db_tools.restore_binaries.sqlite: "%env(resolve:DBTOOLS_RESTORE_BINARY_SQLITE)%"
    db_tools.restore_options: []
    db_tools.restore_timeout: '%env(int:DBTOOLS_RESTORE_TIMEOUT)%'
    db_tools.storage.root_dir: '%env(resolve:DBTOOLS_STORAGE_ROOT_DIR)%'

services:
    # Commands
    db_tools.command.anonymization.run:
        class: MakinaCorpus\DbToolsBundle\Command\Anonymization\AnonymizeCommand
        arguments:
            - '%doctrine.default_connection%'
            - '@db_tools.restorer.factory'
            - '@db_tools.backupper.factory'
            - '@db_tools.anonymization.anonymizator.factory'
            - '@db_tools.storage'
            - '%db_tools.backup_timeout%'
            - '%db_tools.restore_timeout%'
        tags: ['console.command']
    db_tools.command.anonymization.list:
        class: MakinaCorpus\DbToolsBundle\Command\Anonymization\AnonymizerListCommand
        arguments:
            - '@db_tools.anonymization.anonymizer.registry'
        tags: ['console.command']
    db_tools.command.clean:
        class: MakinaCorpus\DbToolsBundle\Command\Anonymization\CleanCommand
        arguments:
            - '@db_tools.anonymization.anonymizator.factory'
            - '%doctrine.default_connection%'
        tags: ['console.command']
    db_tools.command.anonymization.dump:
        class: MakinaCorpus\DbToolsBundle\Command\Anonymization\ConfigDumpCommand
        arguments:
            - '@db_tools.anonymization.anonymizator.factory'
        tags: ['console.command']
    db_tools.command.backup:
        class: MakinaCorpus\DbToolsBundle\Command\BackupCommand
        arguments:
            - '%doctrine.default_connection%'
            - '@db_tools.backupper.factory'
            - '@db_tools.storage'
            - '%db_tools.backup_timeout%'
        tags: ['console.command']
    db_tools.command.check:
        class: MakinaCorpus\DbToolsBundle\Command\CheckCommand
        arguments:
            - '%doctrine.default_connection%'
            - '@db_tools.backupper.factory'
            - '@db_tools.restorer.factory'
        tags: ['console.command']
    db_tools.command.restore:
        class: MakinaCorpus\DbToolsBundle\Command\RestoreCommand
        arguments:
            - '%doctrine.default_connection%'
            - '@db_tools.restorer.factory'
            - '@db_tools.storage'
            - '%db_tools.restore_timeout%'
        tags: ['console.command']
    db_tools.command.stats:
        class: MakinaCorpus\DbToolsBundle\Command\StatsCommand
        arguments:
            - '%doctrine.default_connection%'
            - '@db_tools.stats_provider.factory'
        tags: ['console.command']

    # Database registry.
    db_tools.database_session.registry:
        class: MakinaCorpus\DbToolsBundle\Bridge\Symfony\DoctrineDatabaseSessionRegistry
        arguments: ['@doctrine']

    # Utilities
    db_tools.storage:
        class: MakinaCorpus\DbToolsBundle\Storage\Storage
        arguments: ['%db_tools.storage.root_dir%', '%db_tools.backup_expiration_age%']

    # Backuppers
    db_tools.backupper.factory:
        class: MakinaCorpus\DbToolsBundle\Backupper\BackupperFactory
        arguments:
            - '@db_tools.database_session.registry'
            -
                mariadb: '%db_tools.backup_binaries.mariadb%'
                mysql: '%db_tools.backup_binaries.mysql%'
                postgresql: '%db_tools.backup_binaries.postgresql%'
                sqlite: '%db_tools.backup_binaries.sqlite%'
            - '%db_tools.backup_options%'
            - '%db_tools.backup_excluded_tables%'
            - '@logger'
        tags: [{ name: 'monolog.logger', channel: 'db_tools_backup' }]

    # Restorers
    db_tools.restorer.factory:
        class: MakinaCorpus\DbToolsBundle\Restorer\RestorerFactory
        arguments:
            - '@db_tools.database_session.registry'
            -
                mariadb: '%db_tools.restore_binaries.mariadb%'
                mysql: '%db_tools.restore_binaries.mysql%'
                postgresql: '%db_tools.restore_binaries.postgresql%'
                sqlite: '%db_tools.restore_binaries.sqlite%'
            - '%db_tools.restore_options%'
            - '@logger'
        tags: [{ name: monolog.logger, channel: db_tools_restoration }]

    # Stats providers
    db_tools.stats_provider.factory:
        class: MakinaCorpus\DbToolsBundle\Stats\StatsProviderFactory
        arguments: ['@db_tools.database_session.registry']

    # Anonymization
    db_tools.anonymization.anonymizer.registry:
        class: MakinaCorpus\DbToolsBundle\Anonymization\Anonymizer\AnonymizerRegistry
        arguments: ['%db_tools.anonymization.anonymizer.paths%']
    db_tools.anonymization.anonymizator.factory:
        class: MakinaCorpus\DbToolsBundle\Anonymization\AnonymizatorFactory
        arguments:
            - '@db_tools.database_session.registry'
            - '@db_tools.anonymization.anonymizer.registry'
            - '@logger'
        tags: [{ name: monolog.logger, channel: db_tools_anonymization }]
